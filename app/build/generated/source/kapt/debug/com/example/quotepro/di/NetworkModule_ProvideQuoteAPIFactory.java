// Generated by Dagger (https://dagger.dev).
package com.example.quotepro.di;

import com.example.quotepro.api.QuoteAPI;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class NetworkModule_ProvideQuoteAPIFactory implements Factory<QuoteAPI> {
  private final NetworkModule module;

  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvideQuoteAPIFactory(NetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public QuoteAPI get() {
    return provideQuoteAPI(module, retrofitProvider.get());
  }

  public static NetworkModule_ProvideQuoteAPIFactory create(NetworkModule module,
      Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvideQuoteAPIFactory(module, retrofitProvider);
  }

  public static QuoteAPI provideQuoteAPI(NetworkModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(instance.provideQuoteAPI(retrofit));
  }
}
